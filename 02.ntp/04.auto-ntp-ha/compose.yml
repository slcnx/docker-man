version: '3.8'

services:
  ntp-server-1:
    build:
      context: .
      dockerfile: ../ntp.dockerfile
    container_name: auto-ntp-server-1
    hostname: ntp-server-1
    networks:
      ntp-net:
        ipv4_address: 10.0.0.121
    expose:
      - "123/udp"
    volumes:
      - ./configs/chrony-server-1.conf:/etc/chrony.conf:ro
    cap_add:
      - SYS_TIME
      - SYS_NICE
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "chronyc", "tracking"]
      interval: 30s
      timeout: 10s
      retries: 3

  ntp-server-2:
    build:
      context: .
      dockerfile: ../ntp.dockerfile
    container_name: auto-ntp-server-2
    hostname: ntp-server-2
    networks:
      ntp-net:
        ipv4_address: 10.0.0.122
    expose:
      - "123/udp"
    volumes:
      - ./configs/chrony-server-2.conf:/etc/chrony.conf:ro
    cap_add:
      - SYS_TIME
      - SYS_NICE
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "chronyc", "tracking"]
      interval: 30s
      timeout: 10s
      retries: 3

  ntp-server-3:
    build:
      context: .
      dockerfile: ../ntp.dockerfile
    container_name: auto-ntp-server-3
    hostname: ntp-server-3
    networks:
      ntp-net:
        ipv4_address: 10.0.0.123
    expose:
      - "123/udp"
    volumes:
      - ./configs/chrony-server-3.conf:/etc/chrony.conf:ro
    cap_add:
      - SYS_TIME
      - SYS_NICE
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "chronyc", "tracking"]
      interval: 30s
      timeout: 10s
      retries: 3

  client:
    build:
      context: .
      dockerfile: ../ntp.dockerfile
    container_name: auto-ntp-client
    hostname: client
    networks:
      ntp-net:
        ipv4_address: 10.0.0.124
    volumes:
      - ./configs/chrony-client.conf:/etc/chrony.conf:ro
    cap_add:
      - SYS_TIME
    command: |
      bash -c "
        echo '===== NTP 高可用集群自动化测试 =====' &&
        sleep 15 &&
        echo '' &&

        echo '========== 1. 服务器集群状态 ==========' &&
        echo '--- Server 1 ---' &&
        chronyc -h 10.0.0.121 tracking | grep -E 'Reference ID|Stratum|System time' &&
        echo '' &&
        echo '--- Server 2 ---' &&
        chronyc -h 10.0.0.122 tracking | grep -E 'Reference ID|Stratum|System time' &&
        echo '' &&
        echo '--- Server 3 ---' &&
        chronyc -h 10.0.0.123 tracking | grep -E 'Reference ID|Stratum|System time' &&
        echo '' &&

        echo '========== 2. 客户端时间源状态 ==========' &&
        echo '(* = 当前同步源, + = 备用源)' &&
        chronyc sources &&
        echo '' &&

        echo '========== 3. 客户端同步详情 ==========' &&
        chronyc tracking &&
        echo '' &&

        echo '========== 4. 时间源统计 ==========' &&
        chronyc sourcestats &&
        echo '' &&

        echo '========== 5. 当前时间 ==========' &&
        date &&
        echo '' &&

        echo '========== 6. 高可用测试说明 ==========' &&
        echo '✓ 客户端已配置 3 个 NTP 服务器' &&
        echo '✓ chrony 自动选择最佳时间源（标记为 *)' &&
        echo '✓ 其他源作为备用（标记为 +）' &&
        echo '✓ 当主源失败时，自动切换到备用源' &&
        echo '' &&
        echo '测试故障切换：' &&
        echo '  docker compose stop ntp-server-1' &&
        echo '  docker compose exec client chronyc sources' &&
        echo '  # 观察客户端是否切换到其他服务器' &&
        echo '' &&

        echo '===== 测试完成，保持运行 =====' &&
        tail -f /dev/null
      "
    depends_on:
      ntp-server-1:
        condition: service_healthy
      ntp-server-2:
        condition: service_healthy
      ntp-server-3:
        condition: service_healthy
    restart: unless-stopped

networks:
  ntp-net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.0.0/24
          gateway: 10.0.0.1
