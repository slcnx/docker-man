version: '3.8'

services:
  # Nginx 负载均衡代理服务器（Ubuntu）
  nginx-lb:
    container_name: nginx-lb
    hostname: nginx-lb
    build:
      context: ..
      dockerfile: Dockerfile.ubuntu-compile
    networks:
      nginx-net:
        ipv4_address: 10.0.7.70
    ports:
      - "80"        # HTTP 负载均衡端口
      - "3306"      # MySQL 四层代理端口
      - "6379"      # Redis 四层代理端口
      - "9000"      # PHP-FPM FastCGI 端口
    command: tail -f /dev/null
    tty: true
    stdin_open: true

  # 后端 Web 服务器 1（Rocky）
  nginx-web-1:
    container_name: nginx-web-1
    hostname: nginx-web-1
    build:
      context: ..
      dockerfile: Dockerfile.rocky-compile
    networks:
      nginx-net:
        ipv4_address: 10.0.7.71
    ports:
      - "80"
    command: tail -f /dev/null
    tty: true
    stdin_open: true

  # 后端 Web 服务器 2（Ubuntu）
  nginx-web-2:
    container_name: nginx-web-2
    hostname: nginx-web-2
    build:
      context: ..
      dockerfile: Dockerfile.ubuntu-compile
    networks:
      nginx-net:
        ipv4_address: 10.0.7.72
    ports:
      - "80"
    command: tail -f /dev/null
    tty: true
    stdin_open: true

  # 后端 Web 服务器 3（Rocky，作为备用服务器）
  nginx-web-3:
    container_name: nginx-web-3
    hostname: nginx-web-3
    build:
      context: ..
      dockerfile: Dockerfile.rocky-compile
    networks:
      nginx-net:
        ipv4_address: 10.0.7.73
    ports:
      - "80"
    command: tail -f /dev/null
    tty: true
    stdin_open: true

  # MySQL 服务器（使用官方 MySQL 镜像）
  mysql-server:
    container_name: mysql-server
    hostname: mysql-server
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: rootpass123
      MYSQL_DATABASE: testdb
      MYSQL_USER: testuser
      MYSQL_PASSWORD: testpass
    networks:
      nginx-net:
        ipv4_address: 10.0.7.76
    ports:
      - "3306"
    command: --bind-address=0.0.0.0

  # Redis 服务器（使用官方 Redis 镜像）
  redis-server:
    container_name: redis-server
    hostname: redis-server
    image: redis:7.0
    networks:
      nginx-net:
        ipv4_address: 10.0.7.77
    ports:
      - "6379"
    command: redis-server --bind 0.0.0.0 --protected-mode no

networks:
  nginx-net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.7.0/24
          gateway: 10.0.7.1
