version: '3.8'

services:
  # Nginx 负载均衡代理服务器（Ubuntu）
  nginx-lb:
    container_name: nginx-lb
    hostname: nginx-lb
    build:
      context: ..
      dockerfile: Dockerfile.ubuntu-compile
    networks:
      nginx-net:
        ipv4_address: 10.0.7.70
    ports:
      - "8070:80"      # HTTP 负载均衡端口
      - "3306:3306"    # MySQL 四层代理端口
      - "6379:6379"    # Redis 四层代理端口
      - "9000:9000"    # PHP-FPM FastCGI 端口
    command: tail -f /dev/null
    tty: true
    stdin_open: true

  # 后端 Web 服务器 1（Rocky）
  nginx-web-1:
    container_name: nginx-web-1
    hostname: nginx-web-1
    build:
      context: ..
      dockerfile: Dockerfile.rocky-compile
    networks:
      nginx-net:
        ipv4_address: 10.0.7.71
    ports:
      - "8071:80"
    command: tail -f /dev/null
    tty: true
    stdin_open: true

  # 后端 Web 服务器 2（Ubuntu）
  nginx-web-2:
    container_name: nginx-web-2
    hostname: nginx-web-2
    build:
      context: ..
      dockerfile: Dockerfile.ubuntu-compile
    networks:
      nginx-net:
        ipv4_address: 10.0.7.72
    ports:
      - "8072:80"
    command: tail -f /dev/null
    tty: true
    stdin_open: true

  # 后端 Web 服务器 3（Rocky，作为备用服务器）
  nginx-web-3:
    container_name: nginx-web-3
    hostname: nginx-web-3
    build:
      context: ..
      dockerfile: Dockerfile.rocky-compile
    networks:
      nginx-net:
        ipv4_address: 10.0.7.73
    ports:
      - "8073:80"
    command: tail -f /dev/null
    tty: true
    stdin_open: true

  # MySQL 模拟服务器（使用 Nginx 模拟 MySQL 端口）
  mysql-mock:
    container_name: mysql-mock
    hostname: mysql-mock
    build:
      context: ..
      dockerfile: Dockerfile.ubuntu-compile
    networks:
      nginx-net:
        ipv4_address: 10.0.7.76
    ports:
      - "3307:3306"
    command: tail -f /dev/null
    tty: true
    stdin_open: true

  # Redis 模拟服务器（使用 Nginx 模拟 Redis 端口）
  redis-mock:
    container_name: redis-mock
    hostname: redis-mock
    build:
      context: ..
      dockerfile: Dockerfile.rocky-compile
    networks:
      nginx-net:
        ipv4_address: 10.0.7.77
    ports:
      - "6380:6379"
    command: tail -f /dev/null
    tty: true
    stdin_open: true

networks:
  nginx-net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.7.0/24
          gateway: 10.0.7.1
